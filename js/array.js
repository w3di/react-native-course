// 1. Введение в массивы
// Объяснение концепции:

// Что такое массив?
// Простое определение: Массив — это список данных, который может хранить несколько значений в одной переменной.
// Пример из жизни: список покупок, список контактов.

// Почему массивы полезны?
// Удобно хранить данные одной категории.
// Легко работать с большими объемами данных.

// Синтаксис создания массива:

{
  let myArray = []; // Пустой массив
  let numbers = [1, 2, 3, 4, 5]; // Массив чисел
  let mixed = ["текст", 42, true]; // Смешанный массив тип any[]
  let strArr = ["one", "two", "three", "four", "five", "six"];
  const fruitArray = ["apple", "orange", "banan"];
  console.log(numbers);
}

// 2. Основные операции с массивами
// 2.1. Доступ к элементам массива
// Объяснение индексов:
// Индексы массива начинаются с 0.

{
  let fruits = ["яблоко", "банан", "апельсин"];
  console.log(fruits[0]); // яблоко
  console.log(fruits[1]); // банан
}

// Практическое задание:
// Создайте массив из трёх любимых фильмов и выведите второй фильм.
// 2.2. Изменение элементов массива
// Пример изменения значения:

{
  fruits[1] = "груша";
  console.log(fruits); // ['яблоко', 'груша', 'апельсин']
}

//Измените первый элемент в своём массиве фильмов.

// 2.3. Добавление и удаление элементов
// Добавление:

// С помощью push() (в конец массива):
// javascript
// Копировать код
// fruits.push('ананас');
// console.log(fruits); // ['яблоко', 'груша', 'апельсин', 'ананас']
// С помощью unshift() (в начало массива):
// javascript
// Копировать код
// fruits.unshift('виноград');
// console.log(fruits); // ['виноград', 'яблоко', 'груша', 'апельсин', 'ананас']
// Удаление:

// С помощью pop() (удаляет последний элемент):
// javascript
// Копировать код
// fruits.pop();
// console.log(fruits); // ['виноград', 'яблоко', 'груша', 'апельсин']
// С помощью shift() (удаляет первый элемент):
// javascript
// Копировать код
// fruits.shift();
// console.log(fruits); // ['яблоко', 'груша', 'апельсин']
// Задание:

// Добавьте два новых элемента в массив фильмов, а затем удалите последний.
// 3. Работа с длиной массива (10 минут)
// Свойство .length:

// Определяет количество элементов в массиве:
// javascript
// Копировать код
// console.log(fruits.length); // 3
// Пример применения:

// Добавление элемента в конец массива с использованием .length:
// javascript
// Копировать код
// fruits[fruits.length] = 'манго';
// console.log(fruits); // ['яблоко', 'груша', 'апельсин', 'манго']
// Задание:

// Выведите длину массива фильмов до и после добавления нового элемента.
// 4. Итерация по массиву (15 минут)
// 4.1. Цикл for
// Пример:
// javascript
// Копировать код
// for (let i = 0; i < fruits.length; i++) {
//   console.log(fruits[i]);
// }
// 4.2. Метод forEach()
// Пример:

// javascript
// Копировать код
// fruits.forEach(function(fruit) {
//   console.log(fruit);
// });
// Задание:

// Напишите цикл, который выводит все элементы массива фильмов.
